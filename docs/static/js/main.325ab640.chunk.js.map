{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","hooks/useForm.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","selectors/getHeroesByName.js","components/ui/Navbar.js","Routers/DashboardRoutes.js","Routers/PrivateRoute.js","Routers/PublicRoute.js","Routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","useForm","initialState","useState","values","setValues","reset","handleInputChange","e","target","name","value","LoginScreen","history","dispatch","useContext","username","className","onSubmit","preventDefault","lastPath","localStorage","getItem","replace","handleLogin","autoComplete","onChange","disabled","role","heroes","HeroCard","id","superhero","publisher","alter_ego","first_appearance","characters","to","src","alt","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","find","onClick","length","push","goBack","MarvelScreen","SearchScreen","location","useLocation","queryString","parse","search","q","searchText","heroesFiltered","toLocaleLowerCase","getHeroesByName","placeholder","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","console","log","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.325ab640.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const AuthContext = createContext();","\r\n\r\nexport const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n}","import { types } from \"../types/types\";\r\n\r\n// si el usuario esta autentificado\r\n// const state = {\r\n//     name: 'Fernando',\r\n//     logged: true\r\n// }\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {useState} from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.name);\r\n        // console.log(e.target.value);\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value // computed properties, para objetos\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset]\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { types } from '../../types/types'\r\n\r\n\r\nexport const LoginScreen = ({history}) => {\r\n\r\n    const {dispatch} = useContext(AuthContext)\r\n    const [{username}, handleInputChange]= useForm({\r\n        username : ''\r\n    })\r\n   \r\n    \r\n    const handleLogin = () => {\r\n        // history.push('/');\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n\r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                name: username\r\n            }\r\n        })\r\n\r\n        history.replace(lastPath);\r\n        \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        handleLogin();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1 className=\"text-center\">Login</h1>\r\n            <hr/>\r\n\r\n            <div className=\"row d-flex justify-content-center\">\r\n                <div className=\"col-sm-8\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Usuario:</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                autoComplete=\"off\"\r\n                                value={username}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Contraseña:</label>\r\n                            <input \r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                disabled\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success btn-block\"\r\n                            \r\n                        >\r\n                            Login\r\n                        </button>\r\n\r\n                    </form>\r\n                    <div className=\"alert alert-warning\" role=\"alert\">\r\n                        <p className=\"text-center\">pagina demo con react, no use BD, solo localStorage, asi que solo pon tu usuario y da en login :v</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './HeroCard.css';\r\n\r\nexport const HeroCard = ({\r\n\r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n}) => {\r\n    return (\r\n        // <div className=\"card ms-3\" style={{maxWidth:540}}>\r\n        //     <div className=\"row no-gutters\">\r\n        //         <div className=\"col-md-4\">\r\n        //             <img \r\n        //                 src={`./assets/heroes/${id}.jpg`} \r\n        //                 className=\"card-img\" \r\n        //                 alt={superhero}\r\n        //             />\r\n        //             <div className=\"col-md-8\">\r\n        //                 <div className=\"card-body\">\r\n        //                     <h5 className=\"card-title\">{superhero}</h5>\r\n        //                     <p className=\"card-text\">\r\n        //                         {alter_ego}\r\n        //                     </p>\r\n        //                     {\r\n        //                         (alter_ego !== characters)\r\n        //                             && <p className=\"card-text\">{characters}</p>\r\n        //                     }\r\n        //                     <p className=\"card-text\">\r\n        //                         <small className=\"text-muted\">{first_appearance}</small>\r\n        //                     </p>\r\n\r\n        //                     <Link to={`./hero/${id}`}>\r\n        //                         Mas..\r\n        //                     </Link>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n        <Link to={`./hero/${id}`} className=\"my-card\">\r\n            <img src={`./assets/heroes/${id}.jpg`} className=\"img img-responsive\" alt={superhero}/>\r\n            <div className=\"profile-name\">{superhero}</div>\r\n            <div className=\"profile-position\">{alter_ego}</div>\r\n            <div className=\"profile-overview\">\r\n                <div className=\"profile-overview\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-ms-4\">\r\n                            <h3>{publisher}</h3>\r\n                            <p>Primera aparición: <br />{first_appearance}</p>\r\n                            {\r\n                                (alter_ego !== characters)\r\n                                && <p>{characters}</p>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from './HeroCard'\r\n\r\nexport const HeroList = ({publisher}) => {\r\n\r\n    // const heroes = getHeroesByPublisher(publisher)\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher])    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-columns\">\r\n                {\r\n                    heroes.map( hero => (\r\n                        <HeroCard \r\n                            key= {hero.id}\r\n                            {...hero}\r\n                        />\r\n                    ))\r\n                }\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import {heroes} from '../data/heroes';\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if (!validPublishers.includes(publisher)){\r\n        throw new Error(`Publisher \"${publisher}\" no es correcto`)\r\n    }\r\n\r\n    return heroes.filter(hero => hero.publisher === publisher);\r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DCScreen</h1>\r\n            <HeroList publisher={'DC Comics'}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({history}) => {\r\n\r\n    const {heroeId}= useParams();\r\n    \r\n    // const hero = getHeroById(heroeId)\r\n\r\n    const hero = useMemo(() => getHeroById(heroeId), [heroeId])\r\n\r\n    if (!hero){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const handleReturn = () => {\r\n\r\n        if (history.length <= 2){\r\n            history.push('/');\r\n        }else{\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,\r\n    } = hero;\r\n    \r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n           <div className=\"col-4\">\r\n                <img \r\n                    src={`../assets/heroes/${heroeId}.jpg`}\r\n                    alt={superhero}\r\n                    className=\"img-thumbnail\"\r\n                />\r\n                   \r\n           </div>\r\n\r\n           <div className=\"col-8\">\r\n               <h3>{superhero}</h3>\r\n               <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                       <b>Alter ego: </b> {alter_ego}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                       <b>Publisher: </b> {publisher}\r\n                   </li>\r\n                   <li className=\"list-group-item\">\r\n                       <b>First appearance: </b> {first_appearance}\r\n                   </li>\r\n                   <h5>Characters</h5>\r\n                   <p>{characters}</p>\r\n                   <button\r\n                        className=\"btn btn-outline-info\"\r\n                        onClick={handleReturn}\r\n                   >\r\n                       Return\r\n                   </button>\r\n               </ul>\r\n\r\n           </div>\r\n        </div> \r\n    )\r\n}\r\n","import {heroes} from '../data/heroes';\r\n\r\nexport const getHeroById = (id) => {\r\n\r\n    return heroes.find(hero => hero.id === id);\r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <HeroList publisher={'Marvel Comics'}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport queryString from 'query-string';\r\nimport { useLocation } from 'react-router'\r\n\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { HeroCard } from '../heroes/HeroCard'\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({history}) => {\r\n\r\n    const location = useLocation();\r\n    const {q = ''} = queryString.parse(location.search)\r\n    \r\n    const [{searchText}, handleInputChange]= useForm({\r\n        searchText:q\r\n    });\r\n    \r\n    // const heroesFiltered = getHeroesByName(searchText);\r\n\r\n    const heroesFiltered = useMemo(() => getHeroesByName(q), [q])\r\n    \r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`?q=${searchText}`);\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr/>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                </div>\r\n\r\n                <form onSubmit={handleSearch}>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"searchText\"\r\n                        value={searchText}\r\n                        placeholder=\"Find your hero\"\r\n                        autoComplete=\"off\"\r\n                        className=\"form-control\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        \r\n                    >\r\n                        Search\r\n                    </button>\r\n                </form>\r\n                \r\n                <div className=\"col-7\">\r\n                    <h4>Results</h4>\r\n                    <hr/>\r\n\r\n                    {\r\n                        heroesFiltered.map(hero =>(\r\n                            <HeroCard\r\n                                key={hero.id}\r\n                                {...hero}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {heroes} from '../data/heroes';\r\n\r\nexport const getHeroesByName = (name = '') => {\r\n\r\n    if(name === ''){\r\n        return [];\r\n    }\r\n\r\n    name = name.toLocaleLowerCase();\r\n    // para qe sea insensible a las busquedas\r\n    return heroes.filter(\r\n        hero => hero.superhero.toLocaleLowerCase().includes(name)\r\n    );\r\n}","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types'\r\n// import { AuthContext } from '../../auth/AuthContext'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {user, dispatch} = useContext(AuthContext)\r\n    \r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        \r\n        history.replace(\"/login\")\r\n        \r\n        dispatch({\r\n            type: types.logout\r\n        })\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Heroes\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className=\"nav-item nav-link text-info\">{user.name}</span>\r\n\r\n                    <button\r\n                        className=\"nav-item nav-link btn\"\r\n                        onClick={handleLogout}\r\n                    >\r\n                        Logout    \r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router'\r\nimport { DcScreen } from '../components/dc/DcScreen'\r\nimport { HeroScreen } from '../components/heroes/HeroScreen'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen'\r\nimport { SearchScreen } from '../components/search/SearchScreen'\r\nimport { Navbar } from '../components/ui/Navbar'\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar/>\r\n\r\n            <div className=\"container mt-2\">\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={MarvelScreen} />\r\n                    <Route exact path=\"/hero/:heroeId\" component={HeroScreen} />\r\n                    <Route exact path=\"/dc\" component={DcScreen} />\r\n                    <Route exact path=\"/search\" component={SearchScreen} />\r\n\r\n                    <Redirect to=\"/marvel\" />\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname)\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component = {(props) => (\r\n                (isAuthenticated) \r\n                    ? (<Component {...props} /> )\r\n                    // : (<Redirect to=\"/login\"/>)\r\n                    : (<Redirect to=\"/login\"/>)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component = {(props) => (\r\n                (!isAuthenticated) \r\n                    ? (<Component {...props} /> )\r\n                    : (<Redirect to=\"/\"/>)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    \r\n  } from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\n\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const {user} = useContext(AuthContext)\r\n    console.log(user)\r\n    return (\r\n        <Router>\r\n            <div>\r\n\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact path=\"/login\" \r\n                        component={LoginScreen} \r\n                        isAuthenticated={user.logged}\r\n                        />\r\n                    <PrivateRoute \r\n                        path=\"/\" \r\n                        component={DashboardRoutes} \r\n                        isAuthenticated={user.logged}\r\n                    />\r\n                </Switch>\r\n\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\nimport { AppRouter } from './Routers/AppRouter'\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || {logged: false};\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user))\r\n    }, [user])\r\n\r\n    return (\r\n\r\n        <AuthContext.Provider value={{user, dispatch}}>\r\n            <AppRouter />\r\n\r\n        </AuthContext.Provider>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\n\nReactDOM.render(\n  \n  <HeroesApp />,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}